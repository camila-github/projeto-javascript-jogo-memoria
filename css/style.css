* {
    padding: 0;
    margin: 0;
    /* 'box-sizing: border-box' inclui os valores de 'padding' e 'border' no tamanho total do elemento. 
    Assim, nao tem necessidade de subtraí-las ao aplicar largura e altura.
    /*Ao aplicar 'display: flex' no 'body' e 'margin: auto' no '.memory-game' container, o último será centralizado 
    vertical e horizontalmente. '.memory-game' também será um 'flex-container'. Por default, os items encolhem 
    a sua largura para se acomodar na largura do container em apenas uma linha. Setando 'flex-wrap' como wrap, 
    flex-items ao invés de encolher, retomam a sua largura inicial e ocupam quantas linhas forem necessárias.*/
    box-sizing: border-box;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 50px;
    /*Oculta barra de rolagem*/
    overflow-y: hidden;
}


/*Propriedades da imagem de fundo*/

.img-fundo {
    background-image: url("../img/domino_img_fundo.jpeg");
    background-size: cover;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /*deixa a imagem de fundo um pouco transparente*/
    opacity: 0.7;
}


/*Propriedades do menu parte superior.*/

.banner {
    display: flex;
    align-items: center;
    color: #fff;
    background: #4d0303;
    line-height: 29px;
    position: fixed;
    left: 0;
    top: 0;
    right: 0;
    height: 50px;
    display: flex;
    transition: .5s;
    justify-content: center
}


/*Separa as 'divs' que estão na classe '.banner', uma das outra*/

div#selector>div {
    flex-basis: 50%;
}


/*Propriedades do botão e lista de opções*/

.bordas {
    /*border-radius : arredonda as bordas*/
    border-radius: 10px;
    padding: 3px;
    /*border : adiciona bordas duplas*/
    border: 3px double;
    margin: 30px;
    width: 15px;
    text-align: center;
}

#btnNovo {
    width: 400px;
    padding: 10px;
    cursor: pointer;
}


/*Propriedades do rodape da pagina*/

#text-footer {
    background: #4d0303;
    color: #fff;
    position: absolute;
    bottom: 0;
    width: 100%;
    font-size: 14px;
    font-family: monospace;
    text-align: center;
}

.link-padrao {
    color: inherit;
}


/*Propriedades do container principal(main) .memory-game*/

.memory-game {
    /*height: Altura e width : largura, do container principal (main) .memory-game*/
    height: 500px;
    width: 1200px;
    /* 'display | flex-wrap' : Os itens dentro do container, será posicionado um do lado do outro, em fila (linha), quando nao couberem 
    mais na mesma linha, serão posicionados na linha debaixo, isso ate preencher todo o container*/
    display: flex;
    flex-wrap: wrap;
    /* perspectiva do usuario no eixo z, quanto maior, maior o efeito da perspectiva */
    perspective: 1000px;
}

.card {
    height: calc(35% - 10px);
    width: calc(15% - 10px);
    margin: 10px;
    position: relative;
    cursor: pointer;
    /* adiciona perspectiva 3d, para que o elemento nao fique achatada no plano */
    transform-style: preserve-3d;
    /* adiciona efeito de movimento ao flip do card */
    transition: transform .9s;
}


/*Efeito do clique || 'transform: scale(1):'   ao clicar na carta, diminue um pouco o tamanho da carta,
apos clicar, a carta é virada e o tamanho da carta volta ao normal*/

.card:active {
    transform: scale(0.70);
    transition: transform .2s;
}

.card-front,
.card-back {
    width: 100%;
    height: 100%;
    margin: 8px;
    position: absolute;
    /* 'backface-visibility:' todo elemento tem uma frente e um verso (ao contrario, como um espelho.) 
    essa propriedade retira o verso assim que é girada */
    backface-visibility: hidden;
    /* 'border-radius:' aplica bordas arredondadas, e 'border:' adiciona bordas*/
    border-radius: 10px;
    border: 3px solid;
}

.card-front,
.card.flip {
    /* antes, o verso aparecia transparente, pois ambas as imagens tem position absolute, 
    ao girar no eixo Y, elas ficaram com os versos virados */
    /*transform: rotateY(180deg);*/
    transform: rotate3d(0, 1, 0, 180deg);
}